const prompts = require('./prompts')
const store = require('./sessionStore')
const { shuffle } = require('./utils')

async function startGame(ctx, bot) {
  const chatId = ctx.chat.id
  store.createSession(chatId)
  const session = store.getSession(chatId)
  session.players.push({ id: ctx.from.id, name: ctx.from.first_name })

  await ctx.reply(`üßª –ö–†–ò–ù–ñ-–§–ï–°–¢ –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø! –ü–∏—à–∏ –≤ –õ–° –±–æ—Ç—É, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å.`)

  const prompt = prompts[Math.floor(Math.random() * prompts.length)]
  session.prompt = prompt
  session.phase = 'answering'
  session.players = [                             // –ò –≠–¢–û
  { id: ctx.from.id, name: ctx.from.first_name },  // –í–†–ï–ú–ï–ù–ù–û –î–õ–Ø –ú–ï–ù–Ø, –ü–û–¢–û–ú –£–ë–ï–†–£
]

  for (const player of session.players) {
    bot.telegram.sendMessage(player.id, `üìù –ó–∞–¥–∞–Ω–∏–µ:
${prompt}

–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –∫—Ä–∏–Ω–∂-–æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥.`)
  }

  setTimeout(() => publishAnswers(chatId, bot), 60000)
}

async function handleAnswer(ctx) {
  const session = Object.values(store).find((s) => s?.players?.some((p) => p.id === ctx.from.id))
  if (!session || session.phase !== 'answering') return

  const player = session.players.find(p => p.id === ctx.from.id)
  if (session.answers.some(a => a.id === player.id)) return

  session.answers.push({ id: player.id, text: ctx.message.text })
  ctx.reply('‚úÖ –û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç')
}

async function publishAnswers(chatId, bot) {
  const session = store.getSession(chatId)
  session.phase = 'voting'
  session.answers = shuffle(session.answers)

  let message = `üó≥ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å! –í—ã–±–µ—Ä–∏ —Å–∞–º—ã–π –∫—Ä–∏–Ω–∂–æ–≤—ã–π –æ—Ç–≤–µ—Ç:`
  session.answers.forEach((a, i) => {
    message += `\n${i + 1}. ${a.text}`
  })
  const buttons = session.answers.map((_, i) => [Markup.button.callback(`${i + 1}`, `vote_${i}`)])

  bot.telegram.sendMessage(chatId, message, Markup.inlineKeyboard(buttons))
}

async function handleVote(ctx) {
  const chatId = ctx.chat.id
  const session = store.getSession(chatId)
  if (!session || session.phase !== 'voting') return

  const userId = ctx.from.id
  const voteIndex = parseInt(ctx.match[1])
  const voted = session.answers[voteIndex]

  if (!voted || voted.id === userId) {
    return ctx.answerCbQuery('–ù–µ–ª—å–∑—è –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —Å–µ–±—è –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ!')
  }

  if (session.votes[userId]) return ctx.answerCbQuery('–¢—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª!')

  session.votes[userId] = voted.id
  ctx.answerCbQuery('–ì–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç ‚úÖ')

  if (Object.keys(session.votes).length === session.players.length) {
    countVotes(chatId, bot)
  }
}
async function startGame(ctx, bot) {
  const chatId = ctx.chat.id
  store.createSession(chatId)
  const session = store.getSession(chatId)
  session.players.push({ id: ctx.from.id, name: ctx.from.first_name })

  await ctx.reply(`üßª –ö–†–ò–ù–ñ-–§–ï–°–¢ –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø! –ü–∏—à–∏ –≤ –õ–° –±–æ—Ç—É, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å.`)

  const prompt = prompts[Math.floor(Math.random() * prompts.length)]
  session.prompt = prompt
  session.phase = 'answering'

  for (const player of session.players) {
    bot.telegram.sendMessage(player.id, `üìù –ó–∞–¥–∞–Ω–∏–µ:\n${prompt}\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –∫—Ä–∏–Ω–∂-–æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥.`)
  }

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 60 —Å–µ–∫—É–Ω–¥
  setTimeout(() => publishAnswers(chatId, bot), 60000)
}

async function publishAnswers(chatId, bot) {
  const session = store.getSession(chatId)
  session.phase = 'voting'
  session.answers = shuffle(session.answers)

  let message = `üó≥ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å! –í—ã–±–µ—Ä–∏ —Å–∞–º—ã–π –∫—Ä–∏–Ω–∂–æ–≤—ã–π –æ—Ç–≤–µ—Ç:`
  session.answers.forEach((a, i) => {
    message += `\n${i + 1}. ${a.text}`
  })
  const buttons = session.answers.map((_, i) => [Markup.button.callback(`${i + 1}`, `vote_${i}`)])

  bot.telegram.sendMessage(chatId, message, Markup.inlineKeyboard(buttons))
}
function countVotes(chatId, bot) {
  const session = store.getSession(chatId)
  session.phase = 'finished'

  for (const id of Object.values(session.votes)) {
    session.scores[id] = (session.scores[id] || 0) + 1
  }

  let max = -Infinity
  let king = null
  for (const [id, score] of Object.entries(session.scores)) {
    if (score > max) {
      max = score
      king = id
    }
  }

  const winner = session.players.find(p => p.id == king)

  bot.telegram.sendMessage(chatId, `üëë –ö—Ä–∏–Ω–∂-–∫–æ—Ä–æ–ª—å —Ä–∞—É–Ω–¥–∞: ${winner.name} —Å ${max} –≥–æ–ª–æ—Å–∞–º–∏!`)
}

module.exports = { startGame, handleAnswer, handleVote }